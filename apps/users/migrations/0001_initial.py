# Generated by Django 3.0.3 on 2020-02-18 11:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        ('meta_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('first_name', models.CharField(max_length=50, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Last Name')),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Middle Name')),
                ('mobile', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Mobile Number')),
                ('otp', models.CharField(blank=True, max_length=4, null=True, verbose_name='Otp Number')),
                ('facebook_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='Facebook Id')),
                ('google_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='Google Id')),
                ('profile_image', models.URLField(blank=True, null=True, verbose_name='Profile S3 Link')),
                ('otp_generate_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='otp generate time')),
                ('favorite_hospital_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Favorite Hospital Code')),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Others', 'Others')], max_length=6, null=True, verbose_name='Gender')),
                ('age', models.IntegerField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('mobile_verified', models.BooleanField(default=False, verbose_name='Mobile Verified')),
                ('email_verified', models.BooleanField(default=False, verbose_name='Email Verified')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
                ('user_types', models.ManyToManyField(to='meta_app.UserTypes')),
            ],
            options={
                'verbose_name': 'Base User',
                'verbose_name_plural': 'Base Users',
            },
        ),
        migrations.CreateModel(
            name='Relationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation', models.IntegerField(blank=True, null=True, verbose_name='relation')),
                ('relative_user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relative_user', to=settings.AUTH_USER_MODEL)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Relationship',
                'verbose_name_plural': 'Relationships',
            },
        ),
    ]
